pipeline {
    agent any
    
    environment {
        AWS_DEFAULT_REGION = 'eu-central-1'
        registry = ''
        imageNameBackend = 'backend-repo'
        tagBackend = 'latest'
        imageNameFrontend = 'frontend-repo'
        tagFrontend = 'latest'
        imageNameDB = 'db-seeding-repo'
        tagDB = 'latest'
    }
    
    stages {
        stage('Initialize Environment') {
            steps {
                script {
                    // Retrieve ECR registry URL from Jenkins credentials
                    registry = credentials('ecr-registry-url')
                }
            }
        }
        
        stage('Build and Tag Docker Images') {
            steps {
                // Authenticate with AWS ECR
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: '96f68e7a-e3cb-4e97-97ac-472f07edf015']]) {
                    sh "aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $registry"
                }
                
                // // Build and tag each Docker image
                // script {
                //     // Build and tag backend Docker image
                //     dir('path/to/backend') {
                //         sh "docker build -t $imageNameBackend:$tagBackend ."
                //         sh "docker tag $imageNameBackend:$tagBackend $registry/$imageNameBackend:$tagBackend"
                //     }
                    
                //     // Build and tag frontend Docker image
                //     dir('path/to/frontend') {
                //         sh "docker build -t $imageNameFrontend:$tagFrontend ."
                //         sh "docker tag $imageNameFrontend:$tagFrontend $registry/$imageNameFrontend:$tagFrontend"
                //     }
                    
                //     // Build and tag DB seeding Docker image
                //     dir('path/to/db-seeding') {
                //         sh "docker build -t $imageNameDB:$tagDB ."
                //         sh "docker tag $imageNameDB:$tagDB $registry/$imageNameDB:$tagDB"
                    }
                }
            }
        }
        
        // Add more stages as needed
    }
}
